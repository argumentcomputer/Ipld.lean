   Compiling ipld-rs v0.1.0 (/home/sam/repos/yatima/Ipld.lean/ipld-rs)
error[E0277]: the trait bound `serde::ser::SerializeMap: SerializeSeq` is not satisfied
   --> src/serde/ser.rs:40:23
    |
40  |   type SerializeSeq = SerializeMap;
    |                       ^^^^^^^^^^^^ the trait `SerializeSeq` is not implemented for `serde::ser::SerializeMap`
    |
    = help: the following other types implement trait `SerializeSeq`:
              Impossible<Ok, Error>
              SerializeVec
              serde::__private::ser::content::SerializeSeq<E>
note: required by a bound in `serde::Serializer::SerializeSeq`
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:349:24
    |
349 |     type SerializeSeq: SerializeSeq<Ok = Self::Ok, Error = Self::Error>;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `serde::Serializer::SerializeSeq`

error[E0277]: the trait bound `StructSerializer: SerializeTupleStruct` is not satisfied
   --> src/serde/ser.rs:42:31
    |
42  |   type SerializeTupleStruct = StructSerializer;
    |                               ^^^^^^^^^^^^^^^^ the trait `SerializeTupleStruct` is not implemented for `StructSerializer`
    |
    = help: the following other types implement trait `SerializeTupleStruct`:
              Impossible<Ok, Error>
              SerializeVec
              serde::__private::ser::content::SerializeTupleStruct<E>
note: required by a bound in `serde::Serializer::SerializeTupleStruct`
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:361:32
    |
361 |     type SerializeTupleStruct: SerializeTupleStruct<Ok = Self::Ok, Error = Self::Error>;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `serde::Serializer::SerializeTupleStruct`

error[E0277]: the trait bound `StructSerializer: serde::ser::SerializeTupleVariant` is not satisfied
   --> src/serde/ser.rs:43:32
    |
43  |   type SerializeTupleVariant = StructSerializer;
    |                                ^^^^^^^^^^^^^^^^ the trait `serde::ser::SerializeTupleVariant` is not implemented for `StructSerializer`
    |
    = help: the following other types implement trait `serde::ser::SerializeTupleVariant`:
              Impossible<Ok, Error>
              serde::__private::ser::content::SerializeTupleVariant<E>
              serde::__private::ser::content::SerializeTupleVariantAsMapValue<M>
              serde::ser::SerializeTupleVariant
note: required by a bound in `serde::Serializer::SerializeTupleVariant`
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:367:33
    |
367 |     type SerializeTupleVariant: SerializeTupleVariant<Ok = Self::Ok, Error = Self::Error>;
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `serde::Serializer::SerializeTupleVariant`

error[E0277]: the trait bound `SerializeVec: serde::ser::SerializeMap` is not satisfied
   --> src/serde/ser.rs:44:23
    |
44  |   type SerializeMap = SerializeVec;
    |                       ^^^^^^^^^^^^ the trait `serde::ser::SerializeMap` is not implemented for `SerializeVec`
    |
    = help: the following other types implement trait `serde::ser::SerializeMap`:
              FlatMapSerializeMap<'a, M>
              Impossible<Ok, Error>
              serde::__private::ser::content::SerializeMap<E>
              serde::ser::SerializeMap
note: required by a bound in `serde::Serializer::SerializeMap`
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:373:24
    |
373 |     type SerializeMap: SerializeMap<Ok = Self::Ok, Error = Self::Error>;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `serde::Serializer::SerializeMap`

error[E0277]: the trait bound `SerializeVec: SerializeStruct` is not satisfied
   --> src/serde/ser.rs:45:26
    |
45  |   type SerializeStruct = SerializeVec;
    |                          ^^^^^^^^^^^^ the trait `SerializeStruct` is not implemented for `SerializeVec`
    |
    = help: the following other types implement trait `SerializeStruct`:
              FlatMapSerializeStruct<'a, M>
              Impossible<Ok, Error>
              StructSerializer
              serde::__private::ser::content::SerializeStruct<E>
note: required by a bound in `serde::Serializer::SerializeStruct`
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:379:27
    |
379 |     type SerializeStruct: SerializeStruct<Ok = Self::Ok, Error = Self::Error>;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `serde::Serializer::SerializeStruct`

error[E0277]: the trait bound `serde::ser::SerializeTupleVariant: SerializeStructVariant` is not satisfied
   --> src/serde/ser.rs:46:33
    |
46  |   type SerializeStructVariant = SerializeTupleVariant;
    |                                 ^^^^^^^^^^^^^^^^^^^^^ the trait `SerializeStructVariant` is not implemented for `serde::ser::SerializeTupleVariant`
    |
    = help: the following other types implement trait `SerializeStructVariant`:
              FlatMapSerializeStructVariantAsMapValue<'a, M>
              Impossible<Ok, Error>
              StructSerializer
              serde::__private::ser::content::SerializeStructVariant<E>
              serde::__private::ser::content::SerializeStructVariantAsMapValue<M>
note: required by a bound in `serde::Serializer::SerializeStructVariant`
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:385:34
    |
385 |     type SerializeStructVariant: SerializeStructVariant<Ok = Self::Ok, Error = Self::Error>;
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `serde::Serializer::SerializeStructVariant`

error[E0277]: the trait bound `&serde::ser::Serializer: serde::Serializer` is not satisfied
   --> src/serde/ser.rs:10:19
    |
10  |   value.serialize(&Serializer)
    |         --------- -^^^^^^^^^^
    |         |         |
    |         |         the trait `serde::Serializer` is not implemented for `&serde::ser::Serializer`
    |         |         help: consider removing the leading `&`-reference
    |         required by a bound introduced by this call
    |
note: required by a bound in `serde::Serialize::serialize`
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:249:12
    |
249 |         S: Serializer;
    |            ^^^^^^^^^^ required by this bound in `serde::Serialize::serialize`

error[E0599]: the method `serialize` exists for reference `&Cid`, but its trait bounds were not satisfied
   --> src/serde/ser.rs:23:34
    |
23  |       Self::Link(value) => value.serialize(serializer),
    |                                  ^^^^^^^^^ method cannot be called on `&Cid` due to unsatisfied trait bounds
    |
   ::: src/cid.rs:9:1
    |
9   | pub struct Cid {
    | -------------- doesn't satisfy `Cid: Serialize`
    |
    = note: the following trait bounds were not satisfied:
            `Cid: Serialize`
            which is required by `&Cid: Serialize`
note: the following trait must be implemented
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:216:1
    |
216 | / pub trait Serialize {
217 | |     /// Serialize this value into the given Serde serializer.
218 | |     ///
219 | |     /// See the [Implementing `Serialize`] section of the manual for more
...   |
249 | |         S: Serializer;
250 | | }
    | |_^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following trait defines an item `serialize`, perhaps you need to implement it:
            candidate #1: `Serialize`

error[E0599]: no associated item named `Error` found for struct `serde::ser::Serializer` in the current scope
  --> src/serde/ser.rs:52:15
   |
28 | struct Serializer;
   | ------------------ associated item `Error` not found for this
...
52 |     Err(Self::Error)
   |               ^^^^^ associated item not found in `serde::ser::Serializer`

error[E0599]: no associated item named `Error` found for struct `serde::ser::Serializer` in the current scope
  --> src/serde/ser.rs:55:15
   |
28 | struct Serializer;
   | ------------------ associated item `Error` not found for this
...
55 |     Err(Self::Error)
   |               ^^^^^ associated item not found in `serde::ser::Serializer`

error[E0599]: no associated item named `Error` found for struct `serde::ser::Serializer` in the current scope
  --> src/serde/ser.rs:58:15
   |
28 | struct Serializer;
   | ------------------ associated item `Error` not found for this
...
58 |     Err(Self::Error)
   |               ^^^^^ associated item not found in `serde::ser::Serializer`

error[E0599]: no associated item named `Error` found for struct `serde::ser::Serializer` in the current scope
  --> src/serde/ser.rs:61:15
   |
28 | struct Serializer;
   | ------------------ associated item `Error` not found for this
...
61 |     Err(Self::Error)
   |               ^^^^^ associated item not found in `serde::ser::Serializer`

error[E0599]: no variant or associated item named `Integer` found for enum `Ipld` in the current scope
  --> src/serde/ser.rs:73:18
   |
73 |     Ok(Self::Ok::Integer(value))
   |                  ^^^^^^^ variant or associated item not found in `Ipld`
   |
  ::: src/ipld.rs:10:1
   |
10 | pub enum Ipld {
   | ------------- variant or associated item `Integer` not found here

error[E0599]: no associated item named `Error` found for struct `serde::ser::Serializer` in the current scope
  --> src/serde/ser.rs:76:15
   |
28 | struct Serializer;
   | ------------------ associated item `Error` not found for this
...
76 |     Err(Self::Error)
   |               ^^^^^ associated item not found in `serde::ser::Serializer`

error[E0599]: no associated item named `Error` found for struct `serde::ser::Serializer` in the current scope
  --> src/serde/ser.rs:79:15
   |
28 | struct Serializer;
   | ------------------ associated item `Error` not found for this
...
79 |     Err(Self::Error)
   |               ^^^^^ associated item not found in `serde::ser::Serializer`

error[E0277]: the trait bound `&serde::ser::Serializer: serde::Serializer` is not satisfied
   --> src/serde/ser.rs:100:21
    |
100 |     value.serialize(&self)
    |           --------- -^^^^
    |           |         |
    |           |         the trait `serde::Serializer` is not implemented for `&serde::ser::Serializer`
    |           |         help: consider removing the leading `&`-reference
    |           required by a bound introduced by this call
    |
note: required by a bound in `serde::Serialize::serialize`
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:249:12
    |
249 |         S: Serializer;
    |            ^^^^^^^^^^ required by this bound in `serde::Serialize::serialize`

error[E0308]: mismatched types
   --> src/serde/ser.rs:120:34
    |
120 |     let idx = self.serialize_u64(variant_index)?;
    |                    ------------- ^^^^^^^^^^^^^ expected `u64`, found `u32`
    |                    |
    |                    arguments to this function are incorrect
    |
note: associated function defined here
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:597:8
    |
597 |     fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error>;
    |        ^^^^^^^^^^^^^
help: you can convert a `u32` to a `u64`
    |
120 |     let idx = self.serialize_u64(variant_index.into())?;
    |                                               +++++++

error[E0277]: the trait bound `Cid: From<Vec<u8>>` is not satisfied
   --> src/serde/ser.rs:133:19
    |
133 |         let cid = Cid::try_from(bytes)
    |                   ^^^^^^^^^^^^^ the trait `From<Vec<u8>>` is not implemented for `Cid`
    |
    = note: required because of the requirements on the impl of `Into<Cid>` for `Vec<u8>`
    = note: required because of the requirements on the impl of `TryFrom<Vec<u8>>` for `Cid`

error[E0308]: mismatched types
   --> src/serde/ser.rs:158:8
    |
158 |     Ok(SerializeVec { vec: Vec::with_capacity(len.unwrap_or(0)) })
    |     -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `serde::ser::SerializeMap`, found struct `SerializeVec`
    |     |
    |     arguments to this enum variant are incorrect

error[E0308]: mismatched types
   --> src/serde/ser.rs:165:5
    |
164 |   ) -> Result<Self::SerializeTuple, Self::Error> {
    |        ----------------------------------------- expected `Result<SerializeVec, SerdeError>` because of return type
165 |     self.serialize_seq(Some(len))
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `SerializeVec`, found struct `serde::ser::SerializeMap`
    |
    = note: expected enum `Result<SerializeVec, _>`
               found enum `Result<serde::ser::SerializeMap, _>`

error[E0308]: mismatched types
   --> src/serde/ser.rs:173:5
    |
172 |   ) -> Result<Self::SerializeTupleStruct, Self::Error> {
    |        ----------------------------------------------- expected `Result<StructSerializer, SerdeError>` because of return type
173 |     self.serialize_tuple(len)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `StructSerializer`, found struct `SerializeVec`
    |
    = note: expected enum `Result<StructSerializer, _>`
               found enum `Result<SerializeVec, _>`

error[E0308]: mismatched types
   --> src/serde/ser.rs:183:8
    |
183 |       Ok(SerializeTupleVariant {
    |  _____--_^
    | |     |
    | |     arguments to this enum variant are incorrect
184 | |       idx: variant_index,
185 | |       vec: Vec::with_capacity(len),
186 | |     })
    | |_____^ expected struct `StructSerializer`, found struct `serde::ser::SerializeTupleVariant`

error[E0308]: mismatched types
   --> src/serde/ser.rs:193:8
    |
193 |     Ok(SerializeMap { vec: Vec::new(), next_key: None })
    |     -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `SerializeVec`, found struct `serde::ser::SerializeMap`
    |     |
    |     arguments to this enum variant are incorrect

error[E0308]: mismatched types
   --> src/serde/ser.rs:200:32
    |
200 |     Ok(StructSerializer { ser: &self, vec: Vec::new(), variant_index: 0 })
    |                                ^^^^^ expected struct `serde::ser::Serializer`, found `&serde::ser::Serializer`
    |
help: consider removing the borrow
    |
200 -     Ok(StructSerializer { ser: &self, vec: Vec::new(), variant_index: 0 })
200 +     Ok(StructSerializer { ser: self, vec: Vec::new(), variant_index: 0 })
    | 

error[E0308]: mismatched types
   --> src/serde/ser.rs:200:8
    |
200 |     Ok(StructSerializer { ser: &self, vec: Vec::new(), variant_index: 0 })
    |     -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `SerializeVec`, found struct `StructSerializer`
    |     |
    |     arguments to this enum variant are incorrect

error[E0308]: mismatched types
   --> src/serde/ser.rs:210:32
    |
210 |     Ok(StructSerializer { ser: &self, vec: Vec::new(), variant_index })
    |                                ^^^^^ expected struct `serde::ser::Serializer`, found `&serde::ser::Serializer`
    |
help: consider removing the borrow
    |
210 -     Ok(StructSerializer { ser: &self, vec: Vec::new(), variant_index })
210 +     Ok(StructSerializer { ser: self, vec: Vec::new(), variant_index })
    | 

error[E0308]: mismatched types
   --> src/serde/ser.rs:210:8
    |
210 |     Ok(StructSerializer { ser: &self, vec: Vec::new(), variant_index })
    |     -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `serde::ser::SerializeTupleVariant`, found struct `StructSerializer`
    |     |
    |     arguments to this enum variant are incorrect

error[E0277]: the trait bound `&serde::ser::Serializer: serde::Serializer` is not satisfied
   --> src/serde/ser.rs:242:35
    |
242 |     self.vec.push(value.serialize(&Serializer)?);
    |                         --------- -^^^^^^^^^^
    |                         |         |
    |                         |         the trait `serde::Serializer` is not implemented for `&serde::ser::Serializer`
    |                         |         help: consider removing the leading `&`-reference
    |                         required by a bound introduced by this call
    |
note: required by a bound in `serde::Serialize::serialize`
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:249:12
    |
249 |         S: Serializer;
    |            ^^^^^^^^^^ required by this bound in `serde::Serialize::serialize`

error[E0599]: no variant or associated item named `List` found for enum `Ipld` in the current scope
   --> src/serde/ser.rs:246:64
    |
246 |   fn end(self) -> Result<Self::Ok, Self::Error> { Ok(Self::Ok::List(self.vec)) }
    |                                                                ^^^^ variant or associated item not found in `Ipld`
    |
   ::: src/ipld.rs:10:1
    |
10  | pub enum Ipld {
    | ------------- variant or associated item `List` not found here

error[E0277]: the trait bound `&serde::ser::Serializer: serde::Serializer` is not satisfied
   --> src/serde/ser.rs:294:35
    |
294 |     self.vec.push(value.serialize(&Serializer)?);
    |                         --------- -^^^^^^^^^^
    |                         |         |
    |                         |         the trait `serde::Serializer` is not implemented for `&serde::ser::Serializer`
    |                         |         help: consider removing the leading `&`-reference
    |                         required by a bound introduced by this call
    |
note: required by a bound in `serde::Serialize::serialize`
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:249:12
    |
249 |         S: Serializer;
    |            ^^^^^^^^^^ required by this bound in `serde::Serialize::serialize`

error[E0599]: no variant or associated item named `Integer` found for enum `Ipld` in the current scope
   --> src/serde/ser.rs:301:20
    |
301 |     vec.push(Ipld::Integer(self.idx.clone() as i128));
    |                    ^^^^^^^ variant or associated item not found in `Ipld`
    |
   ::: src/ipld.rs:10:1
    |
10  | pub enum Ipld {
    | ------------- variant or associated item `Integer` not found here

error[E0599]: no variant or associated item named `List` found for enum `Ipld` in the current scope
   --> src/serde/ser.rs:303:14
    |
303 |     Ok(Ipld::List(vec))
    |              ^^^^ variant or associated item not found in `Ipld`
    |
   ::: src/ipld.rs:10:1
    |
10  | pub enum Ipld {
    | ------------- variant or associated item `List` not found here

error[E0277]: the trait bound `&serde::ser::Serializer: serde::Serializer` is not satisfied
   --> src/serde/ser.rs:313:25
    |
313 |     match key.serialize(&Serializer)? {
    |               --------- -^^^^^^^^^^
    |               |         |
    |               |         the trait `serde::Serializer` is not implemented for `&serde::ser::Serializer`
    |               |         help: consider removing the leading `&`-reference
    |               required by a bound introduced by this call
    |
note: required by a bound in `serde::Serialize::serialize`
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:249:12
    |
249 |         S: Serializer;
    |            ^^^^^^^^^^ required by this bound in `serde::Serialize::serialize`

error[E0599]: no variant or associated item named `List` found for enum `Ipld` in the current scope
   --> src/serde/ser.rs:332:25
    |
332 |     self.vec.push(Ipld::List(vec![key, value.serialize(&Serializer)?]));
    |                         ^^^^ variant or associated item not found in `Ipld`
    |
   ::: src/ipld.rs:10:1
    |
10  | pub enum Ipld {
    | ------------- variant or associated item `List` not found here

error[E0277]: the trait bound `&serde::ser::Serializer: serde::Serializer` is not satisfied
   --> src/serde/ser.rs:332:56
    |
332 |     self.vec.push(Ipld::List(vec![key, value.serialize(&Serializer)?]));
    |                                              --------- -^^^^^^^^^^
    |                                              |         |
    |                                              |         the trait `serde::Serializer` is not implemented for `&serde::ser::Serializer`
    |                                              |         help: consider removing the leading `&`-reference
    |                                              required by a bound introduced by this call
    |
note: required by a bound in `serde::Serialize::serialize`
   --> /home/sam/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.137/src/ser/mod.rs:249:12
    |
249 |         S: Serializer;
    |            ^^^^^^^^^^ required by this bound in `serde::Serialize::serialize`

error[E0599]: no variant or associated item named `List` found for enum `Ipld` in the current scope
   --> src/serde/ser.rs:336:64
    |
336 |   fn end(self) -> Result<Self::Ok, Self::Error> { Ok(Self::Ok::List(self.vec)) }
    |                                                                ^^^^ variant or associated item not found in `Ipld`
    |
   ::: src/ipld.rs:10:1
    |
10  | pub enum Ipld {
    | ------------- variant or associated item `List` not found here

error[E0599]: no variant or associated item named `List` found for enum `Ipld` in the current scope
   --> src/serde/ser.rs:388:14
    |
388 |     Ok(Ipld::List(x))
    |              ^^^^ variant or associated item not found in `Ipld`
    |
   ::: src/ipld.rs:10:1
    |
10  | pub enum Ipld {
    | ------------- variant or associated item `List` not found here

error[E0599]: no variant or associated item named `Integer` found for enum `Ipld` in the current scope
   --> src/serde/ser.rs:410:20
    |
410 |     vec.push(Ipld::Integer(self.variant_index.clone() as i128));
    |                    ^^^^^^^ variant or associated item not found in `Ipld`
    |
   ::: src/ipld.rs:10:1
    |
10  | pub enum Ipld {
    | ------------- variant or associated item `Integer` not found here

error[E0599]: no variant or associated item named `List` found for enum `Ipld` in the current scope
   --> src/serde/ser.rs:413:14
    |
413 |     Ok(Ipld::List(vec))
    |              ^^^^ variant or associated item not found in `Ipld`
    |
   ::: src/ipld.rs:10:1
    |
10  | pub enum Ipld {
    | ------------- variant or associated item `List` not found here

Some errors have detailed explanations: E0277, E0308, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `ipld-rs` due to 39 previous errors
